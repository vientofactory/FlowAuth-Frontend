/**
 * OAuth2 스코프 관련 유틸리티
 * 백엔드의 OAUTH2_SCOPES와 동기화됨
 */

// 백엔드 OAuth2 스코프 정의와 일치
export const OAUTH2_SCOPES = {
  // 사용자 정보 관련
  READ_USER: 'read:user',
  WRITE_USER: 'write:user',
  DELETE_USER: 'delete:user',

  // 프로필 관련
  READ_PROFILE: 'read:profile',
  WRITE_PROFILE: 'write:profile',

  // 파일 업로드 관련
  UPLOAD_FILE: 'upload:file',
  READ_FILE: 'read:file',
  DELETE_FILE: 'delete:file',

  // 클라이언트 관리 관련
  READ_CLIENT: 'read:client',
  WRITE_CLIENT: 'write:client',
  DELETE_CLIENT: 'delete:client',

  // 관리자 관련
  ADMIN: 'admin',

  // 기본 스코프
  BASIC: 'basic',

  // OpenID Connect 표준 스코프 (백엔드에서 지원하는 경우)
  OPENID: 'openid',
  PROFILE: 'profile',
  EMAIL: 'email',

  // 레거시 스코프 (하위 호환성)
  READ: 'read',
  WRITE: 'write',
} as const;

// 스코프 정보 인터페이스
// 타입 정의
export interface ScopeInfo {
  name: string;
  description: string;
  icon: string;
  color: string;
  risk: string;
  category: string;
  sensitive: boolean;
}

// 스코프 카테고리
export const SCOPE_CATEGORIES = {
  USER: 'user',
  PROFILE: 'profile',
  FILE: 'file',
  CLIENT: 'client',
  ADMIN: 'admin',
  OPENID: 'openid',
  LEGACY: 'legacy',
} as const;

// 완전한 스코프 매핑
export const SCOPE_MAPPINGS: Record<string, ScopeInfo> = {
  // 사용자 정보 관련
  [OAUTH2_SCOPES.READ_USER]: {
    name: '사용자 기본 정보 읽기',
    description: '앱이 귀하의 기본 사용자 정보(이름, ID 등)를 읽을 수 있습니다',
    icon: 'fa-user-circle',
    color: 'blue',
    risk: 'low',
    category: SCOPE_CATEGORIES.USER,
    sensitive: false,
  },
  [OAUTH2_SCOPES.WRITE_USER]: {
    name: '사용자 정보 수정',
    description: '앱이 귀하의 사용자 정보를 수정할 수 있습니다',
    icon: 'fa-user-edit',
    color: 'orange',
    category: SCOPE_CATEGORIES.USER,
    sensitive: true,
  },
  [OAUTH2_SCOPES.DELETE_USER]: {
    name: '사용자 삭제',
    description: '앱이 귀하의 계정을 삭제할 수 있습니다',
    icon: 'fa-user-times',
    color: 'red',
    category: SCOPE_CATEGORIES.USER,
    sensitive: true,
  },

  // 프로필 관련
  [OAUTH2_SCOPES.READ_PROFILE]: {
    name: '프로필 정보 읽기',
    description: '앱이 귀하의 상세 프로필 정보를 읽을 수 있습니다',
    icon: 'fa-id-card',
    color: 'green',
    category: SCOPE_CATEGORIES.PROFILE,
    sensitive: false,
  },
  [OAUTH2_SCOPES.WRITE_PROFILE]: {
    name: '프로필 정보 수정',
    description: '앱이 귀하의 프로필 정보를 수정할 수 있습니다',
    icon: 'fa-edit',
    color: 'orange',
    category: SCOPE_CATEGORIES.PROFILE,
    sensitive: true,
  },

  // 파일 관련
  [OAUTH2_SCOPES.UPLOAD_FILE]: {
    name: '파일 업로드',
    description: '앱이 파일을 업로드할 수 있습니다',
    icon: 'fa-cloud-upload-alt',
    color: 'purple',
    category: SCOPE_CATEGORIES.FILE,
    sensitive: false,
  },
  [OAUTH2_SCOPES.READ_FILE]: {
    name: '파일 읽기',
    description: '앱이 업로드된 파일을 읽을 수 있습니다',
    icon: 'fa-file-alt',
    color: 'purple',
    category: SCOPE_CATEGORIES.FILE,
    sensitive: false,
  },
  [OAUTH2_SCOPES.DELETE_FILE]: {
    name: '파일 삭제',
    description: '앱이 업로드된 파일을 삭제할 수 있습니다',
    icon: 'fa-trash-alt',
    color: 'red',
    category: SCOPE_CATEGORIES.FILE,
    sensitive: true,
  },

  // 클라이언트 관리 관련
  [OAUTH2_SCOPES.READ_CLIENT]: {
    name: '클라이언트 정보 읽기',
    description: '앱이 OAuth2 클라이언트 정보를 읽을 수 있습니다',
    icon: 'fa-desktop',
    color: 'indigo',
    category: SCOPE_CATEGORIES.CLIENT,
    sensitive: false,
  },
  [OAUTH2_SCOPES.WRITE_CLIENT]: {
    name: '클라이언트 정보 수정',
    description: '앱이 OAuth2 클라이언트 정보를 수정할 수 있습니다',
    icon: 'fa-cogs',
    color: 'orange',
    category: SCOPE_CATEGORIES.CLIENT,
    sensitive: true,
  },
  [OAUTH2_SCOPES.DELETE_CLIENT]: {
    name: '클라이언트 삭제',
    description: '앱이 OAuth2 클라이언트를 삭제할 수 있습니다',
    icon: 'fa-trash',
    color: 'red',
    category: SCOPE_CATEGORIES.CLIENT,
    sensitive: true,
  },

  // 관리자 관련
  [OAUTH2_SCOPES.ADMIN]: {
    name: '관리자 권한',
    description: '앱이 시스템 관리자 기능에 접근할 수 있습니다',
    icon: 'fa-shield-alt',
    color: 'red',
    category: SCOPE_CATEGORIES.ADMIN,
    sensitive: true,
  },

  // 기본 스코프
  [OAUTH2_SCOPES.BASIC]: {
    name: '기본 접근 권한',
    description: '앱이 기본적인 기능에 접근할 수 있습니다',
    icon: 'fa-key',
    color: 'gray',
    category: SCOPE_CATEGORIES.USER,
    sensitive: false,
  },

  // OpenID Connect 표준 스코프
  [OAUTH2_SCOPES.OPENID]: {
    name: 'OpenID 인증',
    description: '앱이 귀하의 신원을 확인할 수 있습니다',
    icon: 'fa-id-badge',
    color: 'indigo',
    category: SCOPE_CATEGORIES.OPENID,
    sensitive: false,
  },
  [OAUTH2_SCOPES.PROFILE]: {
    name: '프로필 정보',
    description: '앱이 귀하의 프로필 정보에 접근할 수 있습니다',
    icon: 'fa-user',
    color: 'green',
    category: SCOPE_CATEGORIES.PROFILE,
    sensitive: false,
  },
  [OAUTH2_SCOPES.EMAIL]: {
    name: '이메일 주소',
    description: '앱이 귀하의 이메일 주소를 확인할 수 있습니다',
    icon: 'fa-envelope',
    color: 'blue',
    category: SCOPE_CATEGORIES.PROFILE,
    sensitive: false,
  },

  // 레거시 스코프 (하위 호환성)
  [OAUTH2_SCOPES.READ]: {
    name: '읽기 권한',
    description: '앱이 귀하의 기본 정보를 읽을 수 있습니다',
    icon: 'fa-eye',
    color: 'blue',
    category: SCOPE_CATEGORIES.LEGACY,
    sensitive: false,
  },
  [OAUTH2_SCOPES.WRITE]: {
    name: '쓰기 권한',
    description: '앱이 귀하의 정보를 수정할 수 있습니다',
    icon: 'fa-pencil-alt',
    color: 'orange',
    category: SCOPE_CATEGORIES.LEGACY,
    sensitive: true,
  },
};

// 색상 클래스 매핑
const COLOR_CLASSES = {
  blue: 'bg-blue-100 text-blue-600',
  orange: 'bg-orange-100 text-orange-600',
  green: 'bg-green-100 text-green-600',
  purple: 'bg-purple-100 text-purple-600',
  indigo: 'bg-indigo-100 text-indigo-600',
  red: 'bg-red-100 text-red-600',
  gray: 'bg-gray-100 text-gray-600',
} as const;

/**
 * 스코프 정보 가져오기 함수
 */
export function getScopeInfo(scope: string): ScopeInfo {
  const mapping = SCOPE_MAPPINGS[scope];
  if (mapping) {
    return mapping;
  }
  
  // 매핑되지 않은 스코프의 경우 기본 처리
  return {
    name: scope.replace(/_/g, ' ').replace(/:/g, ' ').replace(/\b\w/g, l => l.toUpperCase()),
    description: `앱이 ${scope.replace(/_/g, ' ').replace(/:/g, ' ')} 권한을 사용할 수 있습니다`,
    icon: 'fa-key',
    color: 'gray',
    risk: 'unknown',
    category: SCOPE_CATEGORIES.USER,
    sensitive: false,
  };
}

/**
 * 스코프 색상 클래스 가져오기 함수
 */
export function getScopeColorClasses(color: string): string {
  return COLOR_CLASSES[color as keyof typeof COLOR_CLASSES] || COLOR_CLASSES.gray;
}

/**
 * 스코프 유효성 검증
 */
export function validateScopes(scopes: string[]): { isValid: boolean; message?: string } {
  if (!scopes || scopes.length === 0) {
    return { isValid: false, message: '최소 하나의 권한 범위를 선택해주세요.' };
  }

  // 모든 정의된 스코프 목록
  const allValidScopes: string[] = Object.values(OAUTH2_SCOPES);
  const invalidScopes = scopes.filter((scope) => !allValidScopes.includes(scope));

  if (invalidScopes.length > 0) {
    return { 
      isValid: false, 
      message: `유효하지 않은 권한 범위: ${invalidScopes.join(', ')}` 
    };
  }

  return { isValid: true };
}

/**
 * 카테고리별 스코프 그룹화
 */
export function groupScopesByCategory(scopes: string[]): Record<string, string[]> {
  const groups: Record<string, string[]> = {};
  
  scopes.forEach(scope => {
    const scopeInfo = getScopeInfo(scope);
    const category = scopeInfo.category;
    
    if (!groups[category]) {
      groups[category] = [];
    }
    groups[category].push(scope);
  });
  
  return groups;
}

/**
 * 민감한 스코프 필터링
 */
export function getSensitiveScopes(scopes: string[]): string[] {
  return scopes.filter(scope => {
    const scopeInfo = getScopeInfo(scope);
    return scopeInfo.sensitive;
  });
}

/**
 * 스코프 위험도 계산
 */
export function calculateScopeRiskLevel(scopes: string[]): 'low' | 'medium' | 'high' {
  const sensitiveScopes = getSensitiveScopes(scopes);
  const adminScopes = scopes.filter(scope => 
    scope === OAUTH2_SCOPES.ADMIN || 
    scope === OAUTH2_SCOPES.DELETE_USER || 
    scope === OAUTH2_SCOPES.DELETE_CLIENT
  );

  if (adminScopes.length > 0) {
    return 'high';
  } else if (sensitiveScopes.length > 2) {
    return 'high';
  } else if (sensitiveScopes.length > 0) {
    return 'medium';
  } else {
    return 'low';
  }
}

/**
 * 스코프 이름 정규화 (다양한 형식 지원)
 */
export function normalizeScope(scope: string): string {
  // 이미 콜론 형식인 경우 그대로 반환
  if (scope.includes(':')) {
    return scope;
  }
  
  // 레거시 형식 변환
  const legacyMappings: Record<string, string> = {
    'read': OAUTH2_SCOPES.READ,
    'write': OAUTH2_SCOPES.WRITE,
    'profile': OAUTH2_SCOPES.PROFILE,
    'email': OAUTH2_SCOPES.EMAIL,
    'openid': OAUTH2_SCOPES.OPENID,
    'admin': OAUTH2_SCOPES.ADMIN,
    'basic': OAUTH2_SCOPES.BASIC,
  };
  
  return legacyMappings[scope] || scope;
}

/**
 * 스코프의 위험도에 따른 색상 반환
 */
export function getScopeRiskColor(risk: string): string {
  switch (risk) {
    case 'low': return 'text-green-600 bg-green-50';
    case 'medium': return 'text-yellow-600 bg-yellow-50';
    case 'high': return 'text-orange-600 bg-orange-50';
    case 'critical': return 'text-red-600 bg-red-50';
    default: return 'text-gray-600 bg-gray-50';
  }
}

/**
 * 스코프의 위험도에 따른 텍스트 반환
 */
export function getScopeRiskText(risk: string): string {
  switch (risk) {
    case 'low': return '낮음';
    case 'medium': return '보통';
    case 'high': return '높음';
    case 'critical': return '매우 높음';
    default: return '알 수 없음';
  }
}
